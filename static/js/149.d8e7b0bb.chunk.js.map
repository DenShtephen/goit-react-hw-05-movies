{"version":3,"file":"static/js/149.d8e7b0bb.chunk.js","mappings":"2LAGaA,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAE1B,OADAC,QAAQC,IAAIF,IAEVG,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAMK,KAAI,SAAAC,GAAK,OACdH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAKN,SAAEE,EAAMK,SADjCL,EAAMI,GAEV,KAIb,C,2GCXaE,EAAa,SAAHb,GAAkC,IAA5Bc,EAAQd,EAARc,SAAUC,EAAUf,EAAVe,WACrCC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAiBpB,OACEI,EAAAA,EAAAA,MAAA,QAAMR,SAZa,SAAAS,GACnBA,EAAMC,iBACDJ,EAAKK,QAKVX,EAASM,GACTC,EAAQ,KALNK,MAAM,WAMV,EAG+BrB,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SACEuB,UAAQ,EACRC,MAAOR,EACPS,KAAK,OACLC,YAAY,qBACZC,SAtBe,SAAAR,GACnBF,EAAQE,EAAMS,OAAOJ,MACvB,KAsBIxB,EAAAA,EAAAA,KAAA,UAAQyB,KAAK,SAAQxB,SAAEU,MAG7B,E,iBCNA,EArBe,WACb,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bf,EAAKiB,EAAA,GAAEe,EAAQf,EAAA,GACtBgB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAaI,IAAI,SAC1BD,IACLE,EAAAA,EAAAA,IAAYF,GAAOG,KAAKV,EAC1B,GAAG,CAACI,IAIJ,OACEf,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAvC,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBACJD,EAAAA,EAAAA,KAACS,EAAU,CAACC,SANK,SAAA0B,GACnBF,EAAgB,CAAEE,MAAAA,GACpB,EAIwCzB,WAAY,iBAChDX,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,MAAOA,MAGxB,C","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = ({ films }) => {\n  console.log(films);\n  return (\n    <ul>\n      {films.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit, nameButton }) => {\n  const [text, setText] = useState('');\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!text.trim()) {\n      alert('Add Todo');\n      return;\n    }\n\n    onSubmit(text);\n    setText('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        required\n        value={text}\n        type=\"text\"\n        placeholder=\"Find favorite film\"\n        onChange={handleChange}\n      />\n      <button type=\"submit\">{nameButton}</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  nameButton: PropTypes.string.isRequired,\n};\n","import { MovieList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MovieSearch } from 'components/service/moviesApp';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    MovieSearch(query).then(setFilms);\n  }, [searchParams]);\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <>\n      <h2>Find you're movie</h2>\n      <SearchForm onSubmit={handleSubmit} nameButton={'Search Film'} />\n      <MovieList films={films} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","_ref","films","console","log","_jsx","children","map","movie","Link","to","concat","id","title","SearchForm","onSubmit","nameButton","_useState","useState","_useState2","_slicedToArray","text","setText","_jsxs","event","preventDefault","trim","alert","required","value","type","placeholder","onChange","target","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","query","get","MovieSearch","then","_Fragment"],"sourceRoot":""}